library(tornado)
?tornado
tornados <- read_csv("data-raw/tornados.csv")
library(tidyverse)
tornados <- read_csv("data-raw/tornados.csv")
pak::pak("ETC5523-2024/assignment-4-packages-and-shiny-apps-joanna1016ma/tornado")
library(tornado)
tornado
tornados
?sliderinput
library(shiny)
library(ggplot2)
library(dplyr)
?sliderInput
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(ggplot2)
library(dplyr)
library(tornado)
ui <- fluidPage(
br(),
sidebarLayout(
sidebarPanel(
sliderInput("loss",
"Filter Property Loss:",
min = 0,
max = max(tornados$loss),
value = c(0, max(tornados$loss)))
),
mainPanel(
plotOutput("torplot")
)
)
)
runApp()
max(tornados$loss)
runApp()
tornados_clean <- tornados |>
filter(loss != na.omit(loss)) |>
mutate(loss_bil = loss/1000000000)
tornados_clean <- tornados |>
filter(loss != na.omit(loss)) |>
mutate(loss_bil = loss/1000000000)
View(tornados_clean)
runApp()
View(tornados_clean)
runApp()
runApp()
?p
runApp()
install.packages("shinyWidgets")
library(shinyWidgets)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
app_dir <- system.file("tornado-app", package = "tornado")
#' @export
run_app <- function() {
app_dir <- system.file("tornado-app", package = "tornado")
shiny::runApp(app_dir, display.mode = "normal")
}
run_app
